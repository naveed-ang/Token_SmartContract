{
  "contractName": "Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "supply_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalHandled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraws",
      "outputs": [
        {
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "batchSize",
          "type": "uint256"
        }
      ],
      "name": "handleWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"supply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"}],\"name\":\"WithdrawalHandled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"}],\"name\":\"handleWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraws\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Naveed\",\"details\":\"Except standard ERC20 token's features, this smartcontract has two additional features through which\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"constructor to initialize Token contract.\",\"params\":{\"name_\":\"name of ERC20 token\",\"supply_\":\"total supply of token\",\"symbol_\":\"symbol of token\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"details\":\"token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\",\"params\":{\"amount\":\"amount of the tokens depositer want to deposit.\"}},\"handleWithdrawals(uint256)\":{\"details\":\"only admin can trigger this function.\",\"params\":{\"batchSize\":\"number of withdraws to process **** condition: withdraws must be requested first by users/withdrawers.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"withdraw(uint256)\":{\"details\":\"token holders can withdraw as much tokens as he wants in more than one transactions.\",\"params\":{\"amount\":\"amount of the tokens withdrawer want to withdraw **** condition: withdrawer must have deposited enought tokens first.\"}}},\"stateVariables\":{\"deposits\":{\"details\":\"depositer address => total amount depositer has deposited\"},\"withdraws\":{\"details\":\"withdrawId => Withdraw struct\"}},\"title\":\"Token - ERC20 Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"account which handle users withdrawal requests\"},\"deposit(uint256)\":{\"notice\":\"this function is to let token holder deposit his tokens to admin wallet/account.\"},\"deposits(address)\":{\"notice\":\"mapping to track users deposits\"},\"handleWithdrawals(uint256)\":{\"notice\":\"this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\"},\"pendingWithdrawals()\":{\"notice\":\"count to track pending withdrawals\"},\"withdraw(uint256)\":{\"notice\":\"this function is to let token holder withdraw his tokens from admin wallet/account.\"},\"withdraws(uint256)\":{\"notice\":\"mapping to track users withdraw requests\"}},\"notice\":\"This is an ERC20 token, allowing users to deposit & withdraw tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/malik/Work/work/task/Token_SmartContract/contracts/Token.sol\":\"Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/malik/Work/work/task/Token_SmartContract/contracts/Token.sol\":{\"keccak256\":\"0x427f0839fa4505b4c733da806506a6a652f9fd9812efce90a5151ac293bf7ac2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c522bcebefec1402b422673ae052ef8c280b9f733126eb0a591414b6475a646\",\"dweb:/ipfs/QmQUYd2tRAQ2TufRnX9seMHUw34w26Z1VA4mRSUTiNzjuX\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012c1380380620012c18339810160408190526200003491620002cb565b8251839083906200004d9060039060208501906200017a565b508051620000639060049060208401906200017a565b5050506200007833826200009360201b60201c565b5050600580546001600160a01b0319163317905550620003f3565b6001600160a01b038216620000c55760405162461bcd60e51b8152600401620000bc906200033b565b60405180910390fd5b620000d36000838362000175565b8060026000828254620000e791906200037b565b90915550506001600160a01b03821660009081526020819052604081208054839290620001169084906200037b565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200015b90859062000372565b60405180910390a3620001716000838362000175565b5050565b505050565b8280546200018890620003a0565b90600052602060002090601f016020900481019282620001ac5760008555620001f7565b82601f10620001c757805160ff1916838001178555620001f7565b82800160010185558215620001f7579182015b82811115620001f7578251825591602001919060010190620001da565b506200020592915062000209565b5090565b5b808211156200020557600081556001016200020a565b600082601f83011262000231578081fd5b81516001600160401b03808211156200024e576200024e620003dd565b6040516020601f8401601f1916820181018381118382101715620002765762000276620003dd565b60405283825285840181018710156200028d578485fd5b8492505b83831015620002b0578583018101518284018201529182019162000291565b83831115620002c157848185840101525b5095945050505050565b600080600060608486031215620002e0578283fd5b83516001600160401b0380821115620002f7578485fd5b620003058783880162000220565b945060208601519150808211156200031b578384fd5b506200032a8682870162000220565b925050604084015190509250925092565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200039b57634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680620003b557607f821691505b60208210811415620003d757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610ebe80620004036000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063b6b55f2511610071578063b6b55f2514610233578063beca03d514610246578063dd62ed3e1461024e578063f851a44014610261578063fc7e286d1461027657610116565b806370a08231146101f257806395d89b4114610205578063a457c2d71461020d578063a9059cbb1461022057610116565b806323b872dd116100e957806323b872dd146101835780632e1a7d4d14610196578063313ce567146101a957806339509351146101be57806355466c37146101d157610116565b806301b86d121461011b57806306fdde0314610130578063095ea7b31461014e57806318160ddd1461016e575b600080fd5b61012e610129366004610a97565b610289565b005b6101386103b5565b6040516101459190610ae7565b60405180910390f35b61016161015c366004610a6e565b610447565b6040516101459190610adc565b610176610464565b6040516101459190610dc0565b610161610191366004610a33565b61046a565b61012e6101a4366004610a97565b6104fa565b6101b16105bf565b6040516101459190610ddf565b6101616101cc366004610a6e565b6105c4565b6101e46101df366004610a97565b610618565b604051610145929190610ac3565b6101766102003660046109e7565b61063d565b61013861065c565b61016161021b366004610a6e565b61066b565b61016161022e366004610a6e565b6106e4565b61012e610241366004610a97565b6106f8565b610176610778565b61017661025c366004610a01565b61077e565b6102696107a9565b6040516101459190610aaf565b6101766102843660046109e7565b6107b8565b6005546001600160a01b031633146102bc5760405162461bcd60e51b81526004016102b390610d44565b60405180910390fd5b6000600654116102de5760405162461bcd60e51b81526004016102b390610c84565b60065460005b82811015610373576005546006546000908152600860205260409020805460019091015461031f926001600160a01b039081169216906107ca565b60068054600090815260086020526040812080546001600160a01b03191681556001908101919091559054610353916108f4565b600681905561036157610373565b8061036b81610e57565b9150506102e4565b507f50d9276253fcd2b3025af851fb64fdacaa8a7c62ad274e5d54595d2b84a1605481600654846040516103a993929190610dc9565b60405180910390a15050565b6060600380546103c490610e1c565b80601f01602080910402602001604051908101604052809291908181526020018280546103f090610e1c565b801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b5050505050905090565b600061045b610454610907565b848461090b565b50600192915050565b60025490565b60006104778484846107ca565b6001600160a01b038416600090815260016020526040812081610498610907565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156104db5760405162461bcd60e51b81526004016102b390610c3c565b6104ef856104e7610907565b85840361090b565b506001949350505050565b336000908152600760205260409020548111156105295760405162461bcd60e51b81526004016102b390610bbf565b6006546105379060016109bf565b60068181556040805180820182523380825260208083018781526000968752600890915294839020915182546001600160a01b0319166001600160a01b039091161782559351600190910155905490517f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd420906105b4908590610dc0565b60405180910390a350565b601290565b600061045b6105d1610907565b8484600160006105df610907565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546106139190610ded565b61090b565b600860205260009081526040902080546001909101546001600160a01b039091169082565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546103c490610e1c565b6000806001600061067a610907565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106c65760405162461bcd60e51b81526004016102b390610d7b565b6106da6106d1610907565b8585840361090b565b5060019392505050565b600061045b6106f1610907565b84846107ca565b60055461070e906001600160a01b0316826106e4565b503360009081526007602052604090205461072990826109bf565b33600081815260076020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9061076d908490610dc0565b60405180910390a250565b60065481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031681565b60076020526000908152604090205481565b6001600160a01b0383166107f05760405162461bcd60e51b81526004016102b390610cbb565b6001600160a01b0382166108165760405162461bcd60e51b81526004016102b390610b3a565b6108218383836109cb565b6001600160a01b0383166000908152602081905260409020548181101561085a5760405162461bcd60e51b81526004016102b390610bf6565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610891908490610ded565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108db9190610dc0565b60405180910390a36108ee8484846109cb565b50505050565b60006109008284610e05565b9392505050565b3390565b6001600160a01b0383166109315760405162461bcd60e51b81526004016102b390610d00565b6001600160a01b0382166109575760405162461bcd60e51b81526004016102b390610b7d565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109b2908590610dc0565b60405180910390a3505050565b60006109008284610ded565b505050565b80356001600160a01b038116811461065757600080fd5b6000602082840312156109f8578081fd5b610900826109d0565b60008060408385031215610a13578081fd5b610a1c836109d0565b9150610a2a602084016109d0565b90509250929050565b600080600060608486031215610a47578081fd5b610a50846109d0565b9250610a5e602085016109d0565b9150604084013590509250925092565b60008060408385031215610a80578182fd5b610a89836109d0565b946020939093013593505050565b600060208284031215610aa8578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015610b1357858101830151858201604001528201610af7565b81811115610b245783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601c908201527f696e73756666696369656e742066756e6473206465706f736974656400000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526018908201527f6e6f207769746864726177616c73207265717565737465640000000000000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601e908201527f756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e0000604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60008219821115610e0057610e00610e72565b500190565b600082821015610e1757610e17610e72565b500390565b600281046001821680610e3057607f821691505b60208210811415610e5157634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610e6b57610e6b610e72565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122015d85973c5db5df4950e483d7669e67f22ad62050c1c5765190bcea91d6d05fc64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063b6b55f2511610071578063b6b55f2514610233578063beca03d514610246578063dd62ed3e1461024e578063f851a44014610261578063fc7e286d1461027657610116565b806370a08231146101f257806395d89b4114610205578063a457c2d71461020d578063a9059cbb1461022057610116565b806323b872dd116100e957806323b872dd146101835780632e1a7d4d14610196578063313ce567146101a957806339509351146101be57806355466c37146101d157610116565b806301b86d121461011b57806306fdde0314610130578063095ea7b31461014e57806318160ddd1461016e575b600080fd5b61012e610129366004610a97565b610289565b005b6101386103b5565b6040516101459190610ae7565b60405180910390f35b61016161015c366004610a6e565b610447565b6040516101459190610adc565b610176610464565b6040516101459190610dc0565b610161610191366004610a33565b61046a565b61012e6101a4366004610a97565b6104fa565b6101b16105bf565b6040516101459190610ddf565b6101616101cc366004610a6e565b6105c4565b6101e46101df366004610a97565b610618565b604051610145929190610ac3565b6101766102003660046109e7565b61063d565b61013861065c565b61016161021b366004610a6e565b61066b565b61016161022e366004610a6e565b6106e4565b61012e610241366004610a97565b6106f8565b610176610778565b61017661025c366004610a01565b61077e565b6102696107a9565b6040516101459190610aaf565b6101766102843660046109e7565b6107b8565b6005546001600160a01b031633146102bc5760405162461bcd60e51b81526004016102b390610d44565b60405180910390fd5b6000600654116102de5760405162461bcd60e51b81526004016102b390610c84565b60065460005b82811015610373576005546006546000908152600860205260409020805460019091015461031f926001600160a01b039081169216906107ca565b60068054600090815260086020526040812080546001600160a01b03191681556001908101919091559054610353916108f4565b600681905561036157610373565b8061036b81610e57565b9150506102e4565b507f50d9276253fcd2b3025af851fb64fdacaa8a7c62ad274e5d54595d2b84a1605481600654846040516103a993929190610dc9565b60405180910390a15050565b6060600380546103c490610e1c565b80601f01602080910402602001604051908101604052809291908181526020018280546103f090610e1c565b801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b5050505050905090565b600061045b610454610907565b848461090b565b50600192915050565b60025490565b60006104778484846107ca565b6001600160a01b038416600090815260016020526040812081610498610907565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156104db5760405162461bcd60e51b81526004016102b390610c3c565b6104ef856104e7610907565b85840361090b565b506001949350505050565b336000908152600760205260409020548111156105295760405162461bcd60e51b81526004016102b390610bbf565b6006546105379060016109bf565b60068181556040805180820182523380825260208083018781526000968752600890915294839020915182546001600160a01b0319166001600160a01b039091161782559351600190910155905490517f37e8063b72a944a76de602f32b82fd8c2a1c6f99564c727ffaf913c7762cd420906105b4908590610dc0565b60405180910390a350565b601290565b600061045b6105d1610907565b8484600160006105df610907565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546106139190610ded565b61090b565b600860205260009081526040902080546001909101546001600160a01b039091169082565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546103c490610e1c565b6000806001600061067a610907565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156106c65760405162461bcd60e51b81526004016102b390610d7b565b6106da6106d1610907565b8585840361090b565b5060019392505050565b600061045b6106f1610907565b84846107ca565b60055461070e906001600160a01b0316826106e4565b503360009081526007602052604090205461072990826109bf565b33600081815260076020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9061076d908490610dc0565b60405180910390a250565b60065481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031681565b60076020526000908152604090205481565b6001600160a01b0383166107f05760405162461bcd60e51b81526004016102b390610cbb565b6001600160a01b0382166108165760405162461bcd60e51b81526004016102b390610b3a565b6108218383836109cb565b6001600160a01b0383166000908152602081905260409020548181101561085a5760405162461bcd60e51b81526004016102b390610bf6565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610891908490610ded565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108db9190610dc0565b60405180910390a36108ee8484846109cb565b50505050565b60006109008284610e05565b9392505050565b3390565b6001600160a01b0383166109315760405162461bcd60e51b81526004016102b390610d00565b6001600160a01b0382166109575760405162461bcd60e51b81526004016102b390610b7d565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906109b2908590610dc0565b60405180910390a3505050565b60006109008284610ded565b505050565b80356001600160a01b038116811461065757600080fd5b6000602082840312156109f8578081fd5b610900826109d0565b60008060408385031215610a13578081fd5b610a1c836109d0565b9150610a2a602084016109d0565b90509250929050565b600080600060608486031215610a47578081fd5b610a50846109d0565b9250610a5e602085016109d0565b9150604084013590509250925092565b60008060408385031215610a80578182fd5b610a89836109d0565b946020939093013593505050565b600060208284031215610aa8578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b81811015610b1357858101830151858201604001528201610af7565b81811115610b245783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601c908201527f696e73756666696369656e742066756e6473206465706f736974656400000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526018908201527f6e6f207769746864726177616c73207265717565737465640000000000000000604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601e908201527f756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e0000604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b9283526020830191909152604082015260600190565b60ff91909116815260200190565b60008219821115610e0057610e00610e72565b500190565b600082821015610e1757610e17610e72565b500390565b600281046001821680610e3057607f821691505b60208210811415610e5157634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610e6b57610e6b610e72565b5060010190565b634e487b7160e01b600052601160045260246000fdfea264697066735822122015d85973c5db5df4950e483d7669e67f22ad62050c1c5765190bcea91d6d05fc64736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "504:3543:2:-:0;;;1376:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13:3;;1455:5:2;;1462:7;;2029:13:3;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2052:17:3;;;;:7;;:17;;;;;:::i;:::-;;1963:113;;1477:26:2::1;1483:10;1495:7;1477:5;;;:26;;:::i;:::-;-1:-1:-1::0;;1509:5:2::1;:18:::0;;-1:-1:-1;;;;;;1509:18:2::1;1517:10;1509:18;::::0;;-1:-1:-1;504:3543:2;;8311:389:3;-1:-1:-1;;;;;8394:21:3;;8386:65;;;;-1:-1:-1;;;8386:65:3;;;;;;;:::i;:::-;;;;;;;;;8462:49;8491:1;8495:7;8504:6;8462:20;:49::i;:::-;8538:6;8522:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8554:18:3;;:9;:18;;;;;;;;;;:28;;8576:6;;8554:9;:28;;8576:6;;8554:28;:::i;:::-;;;;-1:-1:-1;;8597:37:3;;-1:-1:-1;;;;;8597:37:3;;;8614:1;;8597:37;;;;8627:6;;8597:37;:::i;:::-;;;;;;;;8645:48;8673:1;8677:7;8686:6;8645:19;:48::i;:::-;8311:389;;:::o;10973:121::-;;;;:::o;504:3543:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;504:3543:2;;;-1:-1:-1;504:3543:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:881:8;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:8;;;231:2;;;247:18;;:::i;:::-;296:2;290:9;318:4;388:2;369:13;;-1:-1:-1;;365:27:8;353:40;;349:49;;413:18;;;433:22;;;410:46;407:2;;;459:18;;:::i;:::-;495:2;488:22;519:18;;;556:15;;;552:24;;549:33;-1:-1:-1;546:2:8;;;599:5;592;585:20;546:2;625:5;616:14;;639:133;653:2;650:1;647:9;639:133;;;741:14;;;737:23;;731:30;710:14;;;706:23;;699:63;664:10;;;;639:133;;;790:2;787:1;784:9;781:2;;;849:5;844:2;839;831:6;827:15;823:24;816:39;781:2;-1:-1:-1;883:6:8;80:815;-1:-1:-1;;;;;80:815:8:o;900:657::-;;;;1077:2;1065:9;1056:7;1052:23;1048:32;1045:2;;;1098:6;1090;1083:22;1045:2;1130:16;;-1:-1:-1;;;;;1195:14:8;;;1192:2;;;1227:6;1219;1212:22;1192:2;1255:63;1310:7;1301:6;1290:9;1286:22;1255:63;:::i;:::-;1245:73;;1364:2;1353:9;1349:18;1343:25;1327:41;;1393:2;1383:8;1380:16;1377:2;;;1414:6;1406;1399:22;1377:2;;1442:65;1499:7;1488:8;1477:9;1473:24;1442:65;:::i;:::-;1432:75;;;1547:2;1536:9;1532:18;1526:25;1516:35;;1035:522;;;;;:::o;1562:355::-;1764:2;1746:21;;;1803:2;1783:18;;;1776:30;1842:33;1837:2;1822:18;;1815:61;1908:2;1893:18;;1736:181::o;1922:177::-;2068:25;;;2056:2;2041:18;;2023:76::o;2104:229::-;;2175:1;2171:6;2168:1;2165:13;2162:2;;;-1:-1:-1;;;2201:33:8;;2257:4;2254:1;2247:15;2287:4;2208:3;2275:17;2162:2;-1:-1:-1;2318:9:8;;2152:181::o;2338:380::-;2423:1;2413:12;;2470:1;2460:12;;;2481:2;;2535:4;2527:6;2523:17;2513:27;;2481:2;2588;2580:6;2577:14;2557:18;2554:38;2551:2;;;2634:10;2629:3;2625:20;2622:1;2615:31;2669:4;2666:1;2659:15;2697:4;2694:1;2687:15;2551:2;;2393:325;;;:::o;2723:127::-;2784:10;2779:3;2775:20;2772:1;2765:31;2815:4;2812:1;2805:15;2839:4;2836:1;2829:15;2755:95;504:3543:2;;;;;;",
  "deployedSourceMap": "504:3543:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3105:563;;;;;;:::i;:::-;;:::i;:::-;;2141:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4238:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3229:106::-;;;:::i;:::-;;;;;;;:::i;4871:478::-;;;;;;:::i;:::-;;:::i;2410:351:2:-;;;;;;:::i;:::-;;:::i;3078:91:3:-;;;:::i;:::-;;;;;;;:::i;5744:212::-;;;;;;:::i;:::-;;:::i;994:46:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;3393:125:3:-;;;;;;:::i;:::-;;:::i;2352:102::-;;;:::i;6443:405::-;;;;;;:::i;:::-;;:::i;3721:172::-;;;;;;:::i;:::-;;:::i;1839:229:2:-;;;;;;:::i;:::-;;:::i;696:33::-;;;:::i;3951:149:3:-;;;;;;:::i;:::-;;:::i;623:20:2:-;;;:::i;:::-;;;;;;;:::i;849:44::-;;;;;;:::i;:::-;;:::i;3105:563::-;3764:5;;-1:-1:-1;;;;;3764:5:2;3750:10;:19;3742:62;;;;-1:-1:-1;;;3742:62:2;;;;;;;:::i;:::-;;;;;;;;;3203:1:::1;3182:18;;:22;3174:59;;;;-1:-1:-1::0;;;3174:59:2::1;;;;;;;:::i;:::-;3254:18;::::0;3239:12:::1;3279:320;3303:9;3299:1;:13;3279:320;;;3339:5;::::0;3356:18:::1;::::0;3339:5:::1;3346:29:::0;;;:9:::1;:29;::::0;;;;:40;;3339:5;3388:36;;::::1;::::0;3329:96:::1;::::0;-1:-1:-1;;;;;3339:5:2;;::::1;::::0;3346:40:::1;::::0;3329:9:::1;:96::i;:::-;3452:18;::::0;;3442:29:::1;::::0;;;:9:::1;:29;::::0;;;;3435:36;;-1:-1:-1;;;;;;3435:36:2::1;::::0;;;;;::::1;::::0;;;;3502:18;;:25:::1;::::0;:22:::1;:25::i;:::-;3481:18;:46:::0;;;3537:56:::1;;3577:5;;3537:56;3314:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3279:320;;;;3609:54;3627:4;3633:18;;3653:9;3609:54;;;;;;;;:::i;:::-;;;;;;;;3810:1;3105:563:::0;:::o;2141:98:3:-;2195:13;2227:5;2220:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:98;:::o;4238:166::-;4321:4;4337:39;4346:12;:10;:12::i;:::-;4360:7;4369:6;4337:8;:39::i;:::-;-1:-1:-1;4393:4:3;4238:166;;;;:::o;3229:106::-;3316:12;;3229:106;:::o;4871:478::-;5007:4;5023:36;5033:6;5041:9;5052:6;5023:9;:36::i;:::-;-1:-1:-1;;;;;5097:19:3;;5070:24;5097:19;;;:11;:19;;;;;5070:24;5117:12;:10;:12::i;:::-;-1:-1:-1;;;;;5097:33:3;-1:-1:-1;;;;;5097:33:3;;;;;;;;;;;;;5070:60;;5168:6;5148:16;:26;;5140:79;;;;-1:-1:-1;;;5140:79:3;;;;;;;:::i;:::-;5253:57;5262:6;5270:12;:10;:12::i;:::-;5303:6;5284:16;:25;5253:8;:57::i;:::-;-1:-1:-1;5338:4:3;;4871:478;-1:-1:-1;;;;4871:478:3:o;2410:351:2:-;2474:10;2465:20;;;;:8;:20;;;;;;:30;-1:-1:-1;2465:30:2;2457:71;;;;-1:-1:-1;;;2457:71:2;;;;;;;:::i;:::-;2600:18;;:25;;2623:1;2600:22;:25::i;:::-;2579:18;:46;;;2663:27;;;;;;;;2672:10;2663:27;;;;;;;;;;-1:-1:-1;2631:29:2;;;:9;:29;;;;;;;:59;;;;-1:-1:-1;;;;;;2631:59:2;-1:-1:-1;;;;;2631:59:2;;;;;;;;-1:-1:-1;2631:59:2;;;;2717:18;;2706:50;;;;;;2663:27;;2706:50;:::i;:::-;;;;;;;;2410:351;:::o;3078:91:3:-;3160:2;3078:91;:::o;5744:212::-;5832:4;5848:80;5857:12;:10;:12::i;:::-;5871:7;5917:10;5880:11;:25;5892:12;:10;:12::i;:::-;-1:-1:-1;;;;;5880:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;5880:25:3;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5848:8;:80::i;994:46:2:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;994:46:2;;;;;:::o;3393:125:3:-;-1:-1:-1;;;;;3493:18:3;;3467:7;3493:18;;;;;;;;;;;3393:125;;;;:::o;2352:102::-;2408:13;2440:7;2433:14;;;;;:::i;6443:405::-;6536:4;6552:24;6579:11;:25;6591:12;:10;:12::i;:::-;-1:-1:-1;;;;;6579:25:3;;;;;;;;;;;;;;;;;-1:-1:-1;6579:25:3;;;:34;;;;;;;;;;;-1:-1:-1;6631:35:3;;;;6623:85;;;;-1:-1:-1;;;6623:85:3;;;;;;;:::i;:::-;6742:67;6751:12;:10;:12::i;:::-;6765:7;6793:15;6774:16;:34;6742:8;:67::i;:::-;-1:-1:-1;6837:4:3;;6443:405;-1:-1:-1;;;6443:405:3:o;3721:172::-;3807:4;3823:42;3833:12;:10;:12::i;:::-;3847:9;3858:6;3823:9;:42::i;1839:229:2:-;1950:5;;1941:23;;-1:-1:-1;;;;;1950:5:2;1957:6;1941:8;:23::i;:::-;-1:-1:-1;2002:10:2;1993:20;;;;:8;:20;;;;;;:32;;2018:6;1993:24;:32::i;:::-;1979:10;1970:20;;;;:8;:20;;;;;;;:55;;;;2036:27;;;;;;2056:6;;2036:27;:::i;:::-;;;;;;;;1839:229;:::o;696:33::-;;;;:::o;3951:149:3:-;-1:-1:-1;;;;;4066:18:3;;;4040:7;4066:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3951:149::o;623:20:2:-;;;-1:-1:-1;;;;;623:20:2;;:::o;849:44::-;;;;;;;;;;;;;:::o;7322:713:3:-;-1:-1:-1;;;;;7457:20:3;;7449:70;;;;-1:-1:-1;;;7449:70:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;7537:23:3;;7529:71;;;;-1:-1:-1;;;7529:71:3;;;;;;;:::i;:::-;7611:47;7632:6;7640:9;7651:6;7611:20;:47::i;:::-;-1:-1:-1;;;;;7693:17:3;;7669:21;7693:17;;;;;;;;;;;7728:23;;;;7720:74;;;;-1:-1:-1;;;7720:74:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;7828:17:3;;;:9;:17;;;;;;;;;;;7848:22;;;7828:42;;7890:20;;;;;;;;:30;;7864:6;;7828:9;7890:30;;7864:6;;7890:30;:::i;:::-;;;;;;;;7953:9;-1:-1:-1;;;;;7936:35:3;7945:6;-1:-1:-1;;;;;7936:35:3;;7964:6;7936:35;;;;;;:::i;:::-;;;;;;;;7982:46;8002:6;8010:9;8021:6;7982:19;:46::i;:::-;7322:713;;;;:::o;3108:96:7:-;3166:7;3192:5;3196:1;3192;:5;:::i;:::-;3185:12;3108:96;-1:-1:-1;;;3108:96:7:o;640::6:-;719:10;640:96;:::o;10019:370:3:-;-1:-1:-1;;;;;10150:19:3;;10142:68;;;;-1:-1:-1;;;10142:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10228:21:3;;10220:68;;;;-1:-1:-1;;;10220:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;10299:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10350:32;;;;;10329:6;;10350:32;:::i;:::-;;;;;;;;10019:370;;;:::o;2741:96:7:-;2799:7;2825:5;2829:1;2825;:5;:::i;10973:121:3:-;;;;:::o;14:175:8:-;84:20;;-1:-1:-1;;;;;133:31:8;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:8:o;1294:190::-;;1406:2;1394:9;1385:7;1381:23;1377:32;1374:2;;;1427:6;1419;1412:22;1374:2;-1:-1:-1;1455:23:8;;1364:120;-1:-1:-1;1364:120:8:o;1489:203::-;-1:-1:-1;;;;;1653:32:8;;;;1635:51;;1623:2;1608:18;;1590:102::o;1697:274::-;-1:-1:-1;;;;;1889:32:8;;;;1871:51;;1953:2;1938:18;;1931:34;1859:2;1844:18;;1826:145::o;1976:187::-;2141:14;;2134:22;2116:41;;2104:2;2089:18;;2071:92::o;2168:603::-;;2309:2;2338;2327:9;2320:21;2370:6;2364:13;2413:6;2408:2;2397:9;2393:18;2386:34;2438:4;2451:140;2465:6;2462:1;2459:13;2451:140;;;2560:14;;;2556:23;;2550:30;2526:17;;;2545:2;2522:26;2515:66;2480:10;;2451:140;;;2609:6;2606:1;2603:13;2600:2;;;2679:4;2674:2;2665:6;2654:9;2650:22;2646:31;2639:45;2600:2;-1:-1:-1;2755:2:8;2734:15;-1:-1:-1;;2730:29:8;2715:45;;;;2762:2;2711:54;;2289:482;-1:-1:-1;;;2289:482:8:o;2776:399::-;2978:2;2960:21;;;3017:2;2997:18;;;2990:30;3056:34;3051:2;3036:18;;3029:62;-1:-1:-1;;;3122:2:8;3107:18;;3100:33;3165:3;3150:19;;2950:225::o;3180:398::-;3382:2;3364:21;;;3421:2;3401:18;;;3394:30;3460:34;3455:2;3440:18;;3433:62;-1:-1:-1;;;3526:2:8;3511:18;;3504:32;3568:3;3553:19;;3354:224::o;3583:352::-;3785:2;3767:21;;;3824:2;3804:18;;;3797:30;3863;3858:2;3843:18;;3836:58;3926:2;3911:18;;3757:178::o;3940:402::-;4142:2;4124:21;;;4181:2;4161:18;;;4154:30;4220:34;4215:2;4200:18;;4193:62;-1:-1:-1;;;4286:2:8;4271:18;;4264:36;4332:3;4317:19;;4114:228::o;4347:404::-;4549:2;4531:21;;;4588:2;4568:18;;;4561:30;4627:34;4622:2;4607:18;;4600:62;-1:-1:-1;;;4693:2:8;4678:18;;4671:38;4741:3;4726:19;;4521:230::o;4756:348::-;4958:2;4940:21;;;4997:2;4977:18;;;4970:30;5036:26;5031:2;5016:18;;5009:54;5095:2;5080:18;;4930:174::o;5109:401::-;5311:2;5293:21;;;5350:2;5330:18;;;5323:30;5389:34;5384:2;5369:18;;5362:62;-1:-1:-1;;;5455:2:8;5440:18;;5433:35;5500:3;5485:19;;5283:227::o;5515:400::-;5717:2;5699:21;;;5756:2;5736:18;;;5729:30;5795:34;5790:2;5775:18;;5768:62;-1:-1:-1;;;5861:2:8;5846:18;;5839:34;5905:3;5890:19;;5689:226::o;5920:354::-;6122:2;6104:21;;;6161:2;6141:18;;;6134:30;6200:32;6195:2;6180:18;;6173:60;6265:2;6250:18;;6094:180::o;6279:401::-;6481:2;6463:21;;;6520:2;6500:18;;;6493:30;6559:34;6554:2;6539:18;;6532:62;-1:-1:-1;;;6625:2:8;6610:18;;6603:35;6670:3;6655:19;;6453:227::o;6685:177::-;6831:25;;;6819:2;6804:18;;6786:76::o;6867:319::-;7069:25;;;7125:2;7110:18;;7103:34;;;;7168:2;7153:18;;7146:34;7057:2;7042:18;;7024:162::o;7191:184::-;7363:4;7351:17;;;;7333:36;;7321:2;7306:18;;7288:87::o;7380:128::-;;7451:1;7447:6;7444:1;7441:13;7438:2;;;7457:18;;:::i;:::-;-1:-1:-1;7493:9:8;;7428:80::o;7513:125::-;;7581:1;7578;7575:8;7572:2;;;7586:18;;:::i;:::-;-1:-1:-1;7623:9:8;;7562:76::o;7643:380::-;7728:1;7718:12;;7775:1;7765:12;;;7786:2;;7840:4;7832:6;7828:17;7818:27;;7786:2;7893;7885:6;7882:14;7862:18;7859:38;7856:2;;;7939:10;7934:3;7930:20;7927:1;7920:31;7974:4;7971:1;7964:15;8002:4;7999:1;7992:15;7856:2;;7698:325;;;:::o;8028:135::-;;-1:-1:-1;;8088:17:8;;8085:2;;;8108:18;;:::i;:::-;-1:-1:-1;8155:1:8;8144:13;;8075:88::o;8168:127::-;8229:10;8224:3;8220:20;8217:1;8210:31;8260:4;8257:1;8250:15;8284:4;8281:1;8274:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^ 0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\n/// @title Token - ERC20 Token\n/// @author Naveed\n/// @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n/// @dev Except standard ERC20 token's features, this smartcontract has two additional features through which\n//       token holders can deposit their tokens to admin and can their deposited tokens. \ncontract Token is ERC20 {\n  using SafeMath for uint256;\n  /// @notice account which handle users withdrawal requests\n  address public admin;\n  /// @notice count to track pending withdrawals\n  uint256 public pendingWithdrawals;\n\n  /// @notice mapping to track users deposits\n  /// @dev depositer address => total amount depositer has deposited\n  mapping (address => uint256) public deposits;\n\n  /// @notice mapping to track users withdraw requests\n  /// @dev withdrawId => Withdraw struct\n  mapping (uint256 => Withdraw) public withdraws;\n\n  /// @dev struct being used in above withdraws mapping, to manage Withdrawer information\n  struct Withdraw {\n    address withdrawer;\n    uint256 amount;\n  }\n\n  /// @dev constructor to initialize Token contract.\n  /// @param name_ name of ERC20 token\n  /// @param symbol_ symbol of token\n  /// @param supply_ total supply of token\n  constructor(string memory name_, string memory symbol_, uint256 supply_) ERC20(name_, symbol_) {\n    _mint(msg.sender, supply_);\n    admin = msg.sender;\n  }\n\n  /// @notice this function is to let token holder deposit his tokens to admin wallet/account.\n  /// @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n  /// @param amount amount of the tokens depositer want to deposit.\n  function deposit(uint256 amount) public {\n    // escrowing tokens by transferring to admin wallet\n    transfer(admin, amount);\n    deposits[msg.sender] = deposits[msg.sender].add(amount);\n    emit Deposit(msg.sender, amount);\n  }\n\n  /// @notice this function is to let token holder withdraw his tokens from admin wallet/account.\n  /// @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n  /// @param amount amount of the tokens withdrawer want to withdraw\n  /// **** condition: withdrawer must have deposited enought tokens first.\n  function withdraw(uint256 amount) public {\n    require(deposits[msg.sender] >= amount, \"insufficient funds deposited\");\n    // _transfer(admin, msg.sender, amount);\n    pendingWithdrawals = pendingWithdrawals.add(1);\n    withdraws[pendingWithdrawals] = Withdraw(msg.sender,amount);\n    \n    emit Withdrawal(pendingWithdrawals, msg.sender, amount);\n  }\n\n  /// @notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n  /// @dev only admin can trigger this function.\n  /// @param batchSize number of withdraws to process\n  /// **** condition: withdraws must be requested first by users/withdrawers.\n  function handleWithdrawals(uint256 batchSize) onlyAdmin public {\n    require(pendingWithdrawals > 0, \"no withdrawals requested\");\n    uint256 from = pendingWithdrawals;\n\n    for (uint256 i = 0; i < batchSize; i++) {\n        _transfer(admin, withdraws[pendingWithdrawals].withdrawer, withdraws[pendingWithdrawals].amount);\n        delete withdraws[pendingWithdrawals];\n        pendingWithdrawals = pendingWithdrawals.sub(1);\n        if (pendingWithdrawals == 0){\n          break;\n        }\n    }\n    emit WithdrawalHandled(from, pendingWithdrawals, batchSize);\n  }\n/// @dev modifier to ensure caller is admin\n  modifier onlyAdmin() {\n    require(msg.sender == admin, \"unauthorized: caller not admin\");\n    _;\n  }\n\n  // Events\n  event Deposit(address indexed depositer, uint256 amount);\n  event Withdrawal(uint256 indexed id, address indexed withdrawer, uint256 amount);\n  event WithdrawalHandled(uint256 from, uint256 to, uint256 batchSize);\n}\n",
  "sourcePath": "/home/malik/Work/work/task/Token_SmartContract/contracts/Token.sol",
  "ast": {
    "absolutePath": "/home/malik/Work/work/task/Token_SmartContract/contracts/Token.sol",
    "exportedSymbols": {
      "Context": [
        1171
      ],
      "ERC20": [
        1046
      ],
      "IERC20": [
        1124
      ],
      "IERC20Metadata": [
        1149
      ],
      "SafeMath": [
        1483
      ],
      "Token": [
        500
      ]
    },
    "id": 501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 268,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 269,
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 1047,
        "src": "58:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 270,
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 1484,
        "src": "114:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 272,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1046,
              "src": "522:5:2"
            },
            "id": 273,
            "nodeType": "InheritanceSpecifier",
            "src": "522:5:2"
          }
        ],
        "contractDependencies": [
          1046,
          1124,
          1149,
          1171
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 271,
          "nodeType": "StructuredDocumentation",
          "src": "173:241:2",
          "text": "@title Token - ERC20 Token\n @author Naveed\n @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n @dev Except standard ERC20 token's features, this smartcontract has two additional features through which"
        },
        "fullyImplemented": true,
        "id": 500,
        "linearizedBaseContracts": [
          500,
          1046,
          1149,
          1124,
          1171
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 276,
            "libraryName": {
              "id": 274,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1483,
              "src": "538:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "532:27:2",
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "562:58:2",
              "text": "@notice account which handle users withdrawal requests"
            },
            "functionSelector": "f851a440",
            "id": 279,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "623:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "647:46:2",
              "text": "@notice count to track pending withdrawals"
            },
            "functionSelector": "beca03d5",
            "id": 282,
            "mutability": "mutable",
            "name": "pendingWithdrawals",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "696:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 281,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "734:112:2",
              "text": "@notice mapping to track users deposits\n @dev depositer address => total amount depositer has deposited"
            },
            "functionSelector": "fc7e286d",
            "id": 287,
            "mutability": "mutable",
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "849:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 286,
              "keyType": {
                "id": 284,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "858:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "849:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 285,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "898:93:2",
              "text": "@notice mapping to track users withdraw requests\n @dev withdrawId => Withdraw struct"
            },
            "functionSelector": "55466c37",
            "id": 293,
            "mutability": "mutable",
            "name": "withdraws",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "994:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
              "typeString": "mapping(uint256 => struct Token.Withdraw)"
            },
            "typeName": {
              "id": 292,
              "keyType": {
                "id": 289,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                "typeString": "mapping(uint256 => struct Token.Withdraw)"
              },
              "valueType": {
                "id": 291,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 290,
                  "name": "Withdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 298,
                  "src": "1014:8:2"
                },
                "referencedDeclaration": 298,
                "src": "1014:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Withdraw_$298_storage_ptr",
                  "typeString": "struct Token.Withdraw"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Token.Withdraw",
            "id": 298,
            "members": [
              {
                "constant": false,
                "id": 295,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 298,
                "src": "1157:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 294,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 297,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 298,
                "src": "1181:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 296,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1181:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Withdraw",
            "nodeType": "StructDefinition",
            "scope": 500,
            "src": "1135:65:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1471:61:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1483:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1483:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 315,
                        "name": "supply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "1495:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 312,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "1477:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:26:2"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1509:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 319,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1517:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1517:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1509:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:18:2"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "1204:169:2",
              "text": "@dev constructor to initialize Token contract.\n @param name_ name of ERC20 token\n @param symbol_ symbol of token\n @param supply_ total supply of token"
            },
            "id": 324,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 308,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "1455:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 309,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "1462:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 310,
                "modifierName": {
                  "id": 307,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1046,
                  "src": "1449:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1449:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1388:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1409:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "supply_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1432:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:61:2"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:2"
            },
            "scope": 500,
            "src": "1376:156:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "1879:189:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "1950:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "1957:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "1941:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:23:2"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 335,
                        "name": "deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1970:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "expression": {
                          "id": 336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1979:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1979:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 344,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "2018:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 339,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "1993:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 342,
                          "indexExpression": {
                            "expression": {
                              "id": 340,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2002:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2002:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1993:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1347,
                        "src": "1993:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1993:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:55:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2044:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "2056:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 348,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "2036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "EmitStatement",
                  "src": "2031:32:2"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "1536:300:2",
              "text": "@notice this function is to let token holder deposit his tokens to admin wallet/account.\n @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n @param amount amount of the tokens depositer want to deposit."
            },
            "functionSelector": "b6b55f25",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1856:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:16:2"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:2"
            },
            "scope": 500,
            "src": "1839:229:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "2451:310:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 362,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "2465:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 365,
                          "indexExpression": {
                            "expression": {
                              "id": 363,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2474:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2474:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2465:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 366,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2489:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473206465706f7369746564",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2497:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        },
                        "value": "insufficient funds deposited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2457:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:71:2"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 371,
                      "name": "pendingWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2579:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2623:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 372,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2600:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1347,
                        "src": "2600:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2600:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:46:2"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "withdraws",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "2631:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                          "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2641:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2631:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                        "typeString": "struct Token.Withdraw storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2672:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2672:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 384,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2683:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 381,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "2663:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Withdraw_$298_storage_ptr_$",
                          "typeString": "type(struct Token.Withdraw storage pointer)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$298_memory_ptr",
                        "typeString": "struct Token.Withdraw memory"
                      }
                    },
                    "src": "2631:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                      "typeString": "struct Token.Withdraw storage ref"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:59:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 389,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2717:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2737:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2737:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "2749:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 388,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "2706:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "2701:55:2"
                }
              ]
            },
            "documentation": {
              "id": 356,
              "nodeType": "StructuredDocumentation",
              "src": "2072:335:2",
              "text": "@notice this function is to let token holder withdraw his tokens from admin wallet/account.\n @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n @param amount amount of the tokens withdrawer want to withdraw\n **** condition: withdrawer must have deposited enought tokens first."
            },
            "functionSelector": "2e1a7d4d",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2428:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2427:16:2"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2451:0:2"
            },
            "scope": 500,
            "src": "2410:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "3168:500:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 405,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3182:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3203:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3182:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207769746864726177616c7320726571756573746564",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        },
                        "value": "no withdrawals requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3174:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:59:2"
                },
                {
                  "assignments": [
                    412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 412,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "3239:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3239:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "id": 413,
                    "name": "pendingWithdrawals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 282,
                    "src": "3254:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3239:33:2"
                },
                {
                  "body": {
                    "id": 455,
                    "nodeType": "Block",
                    "src": "3319:280:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "3339:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 427,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "3346:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 429,
                                "indexExpression": {
                                  "id": 428,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "3356:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3346:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 295,
                              "src": "3346:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 431,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "3388:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 433,
                                "indexExpression": {
                                  "id": 432,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "3398:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3388:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 297,
                              "src": "3388:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "3329:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:96:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 436,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:96:2"
                      },
                      {
                        "expression": {
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3435:36:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 437,
                              "name": "withdraws",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "3442:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                              }
                            },
                            "id": 439,
                            "indexExpression": {
                              "id": 438,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "3452:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3442:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                              "typeString": "struct Token.Withdraw storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 441,
                        "nodeType": "ExpressionStatement",
                        "src": "3435:36:2"
                      },
                      {
                        "expression": {
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 442,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3481:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3525:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 443,
                                "name": "pendingWithdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 282,
                                "src": "3502:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1362,
                              "src": "3502:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3502:25:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3481:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "3481:46:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 449,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3541:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3563:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3541:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "3537:56:2",
                        "trueBody": {
                          "id": 453,
                          "nodeType": "Block",
                          "src": "3565:28:2",
                          "statements": [
                            {
                              "id": 452,
                              "nodeType": "Break",
                              "src": "3577:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 419,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "3299:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 420,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3303:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3299:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 456,
                  "initializationExpression": {
                    "assignments": [
                      416
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "3284:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3284:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 418,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3296:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3284:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3314:3:2",
                      "subExpression": {
                        "id": 422,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "3314:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 424,
                    "nodeType": "ExpressionStatement",
                    "src": "3314:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3279:320:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 458,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "3627:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 459,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "3633:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 460,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3653:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "WithdrawalHandled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "3609:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "3604:59:2"
                }
              ]
            },
            "documentation": {
              "id": 397,
              "nodeType": "StructuredDocumentation",
              "src": "2765:337:2",
              "text": "@notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n @dev only admin can trigger this function.\n @param batchSize number of withdraws to process\n **** condition: withdraws must be requested first by users/withdrawers."
            },
            "functionSelector": "01b86d12",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 402,
                "modifierName": {
                  "id": 401,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "3151:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3151:9:2"
              }
            ],
            "name": "handleWithdrawals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "3132:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:19:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3168:0:2"
            },
            "scope": 500,
            "src": "3105:563:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "3736:80:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 468,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3750:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3750:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 470,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3764:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3750:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        },
                        "value": "unauthorized: caller not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3742:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:62:2"
                },
                {
                  "id": 475,
                  "nodeType": "PlaceholderStatement",
                  "src": "3810:1:2"
                }
              ]
            },
            "documentation": {
              "id": 465,
              "nodeType": "StructuredDocumentation",
              "src": "3669:43:2",
              "text": "@dev modifier to ensure caller is admin"
            },
            "id": 477,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:2:2"
            },
            "src": "3715:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 483,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositer",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3846:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3873:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:43:2"
            },
            "src": "3832:57:2"
          },
          {
            "anonymous": false,
            "id": 491,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3909:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3929:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3957:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3908:64:2"
            },
            "src": "3892:81:2"
          },
          {
            "anonymous": false,
            "id": 499,
            "name": "WithdrawalHandled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4000:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4014:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4026:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3999:45:2"
            },
            "src": "3976:69:2"
          }
        ],
        "scope": 501,
        "src": "504:3543:2"
      }
    ],
    "src": "32:4016:2"
  },
  "legacyAST": {
    "absolutePath": "/home/malik/Work/work/task/Token_SmartContract/contracts/Token.sol",
    "exportedSymbols": {
      "Context": [
        1171
      ],
      "ERC20": [
        1046
      ],
      "IERC20": [
        1124
      ],
      "IERC20Metadata": [
        1149
      ],
      "SafeMath": [
        1483
      ],
      "Token": [
        500
      ]
    },
    "id": 501,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 268,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 269,
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 1047,
        "src": "58:55:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 270,
        "nodeType": "ImportDirective",
        "scope": 501,
        "sourceUnit": 1484,
        "src": "114:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 272,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1046,
              "src": "522:5:2"
            },
            "id": 273,
            "nodeType": "InheritanceSpecifier",
            "src": "522:5:2"
          }
        ],
        "contractDependencies": [
          1046,
          1124,
          1149,
          1171
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 271,
          "nodeType": "StructuredDocumentation",
          "src": "173:241:2",
          "text": "@title Token - ERC20 Token\n @author Naveed\n @notice This is an ERC20 token, allowing users to deposit & withdraw tokens.\n @dev Except standard ERC20 token's features, this smartcontract has two additional features through which"
        },
        "fullyImplemented": true,
        "id": 500,
        "linearizedBaseContracts": [
          500,
          1046,
          1149,
          1124,
          1171
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 276,
            "libraryName": {
              "id": 274,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1483,
              "src": "538:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "532:27:2",
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 277,
              "nodeType": "StructuredDocumentation",
              "src": "562:58:2",
              "text": "@notice account which handle users withdrawal requests"
            },
            "functionSelector": "f851a440",
            "id": 279,
            "mutability": "mutable",
            "name": "admin",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "623:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 278,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "623:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 280,
              "nodeType": "StructuredDocumentation",
              "src": "647:46:2",
              "text": "@notice count to track pending withdrawals"
            },
            "functionSelector": "beca03d5",
            "id": 282,
            "mutability": "mutable",
            "name": "pendingWithdrawals",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "696:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 281,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "696:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 283,
              "nodeType": "StructuredDocumentation",
              "src": "734:112:2",
              "text": "@notice mapping to track users deposits\n @dev depositer address => total amount depositer has deposited"
            },
            "functionSelector": "fc7e286d",
            "id": 287,
            "mutability": "mutable",
            "name": "deposits",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "849:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 286,
              "keyType": {
                "id": 284,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "858:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "849:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 285,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "869:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 288,
              "nodeType": "StructuredDocumentation",
              "src": "898:93:2",
              "text": "@notice mapping to track users withdraw requests\n @dev withdrawId => Withdraw struct"
            },
            "functionSelector": "55466c37",
            "id": 293,
            "mutability": "mutable",
            "name": "withdraws",
            "nodeType": "VariableDeclaration",
            "scope": 500,
            "src": "994:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
              "typeString": "mapping(uint256 => struct Token.Withdraw)"
            },
            "typeName": {
              "id": 292,
              "keyType": {
                "id": 289,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1003:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "994:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                "typeString": "mapping(uint256 => struct Token.Withdraw)"
              },
              "valueType": {
                "id": 291,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 290,
                  "name": "Withdraw",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 298,
                  "src": "1014:8:2"
                },
                "referencedDeclaration": 298,
                "src": "1014:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Withdraw_$298_storage_ptr",
                  "typeString": "struct Token.Withdraw"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Token.Withdraw",
            "id": 298,
            "members": [
              {
                "constant": false,
                "id": 295,
                "mutability": "mutable",
                "name": "withdrawer",
                "nodeType": "VariableDeclaration",
                "scope": 298,
                "src": "1157:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 294,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1157:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 297,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 298,
                "src": "1181:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 296,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1181:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Withdraw",
            "nodeType": "StructDefinition",
            "scope": 500,
            "src": "1135:65:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "1471:61:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1483:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1483:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 315,
                        "name": "supply_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "1495:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 312,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "1477:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1477:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1477:26:2"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1509:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 319,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1517:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1517:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1509:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:18:2"
                }
              ]
            },
            "documentation": {
              "id": 299,
              "nodeType": "StructuredDocumentation",
              "src": "1204:169:2",
              "text": "@dev constructor to initialize Token contract.\n @param name_ name of ERC20 token\n @param symbol_ symbol of token\n @param supply_ total supply of token"
            },
            "id": 324,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 308,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 301,
                    "src": "1455:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 309,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 303,
                    "src": "1462:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 310,
                "modifierName": {
                  "id": 307,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1046,
                  "src": "1449:5:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1449:21:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1388:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1409:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "supply_",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1432:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1432:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:61:2"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:2"
            },
            "scope": 500,
            "src": "1376:156:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "1879:189:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 331,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "1950:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 332,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "1957:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 620,
                      "src": "1941:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:23:2"
                },
                {
                  "expression": {
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 335,
                        "name": "deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "1970:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 338,
                      "indexExpression": {
                        "expression": {
                          "id": 336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1979:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1979:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1970:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 344,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 327,
                          "src": "2018:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 339,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "1993:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 342,
                          "indexExpression": {
                            "expression": {
                              "id": 340,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2002:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2002:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1993:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1347,
                        "src": "1993:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1993:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1970:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:55:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2044:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2044:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 351,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "2056:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 348,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "2036:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2036:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "EmitStatement",
                  "src": "2031:32:2"
                }
              ]
            },
            "documentation": {
              "id": 325,
              "nodeType": "StructuredDocumentation",
              "src": "1536:300:2",
              "text": "@notice this function is to let token holder deposit his tokens to admin wallet/account.\n @dev token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.\n @param amount amount of the tokens depositer want to deposit."
            },
            "functionSelector": "b6b55f25",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1856:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:16:2"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:2"
            },
            "scope": 500,
            "src": "1839:229:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 395,
              "nodeType": "Block",
              "src": "2451:310:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 362,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "2465:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 365,
                          "indexExpression": {
                            "expression": {
                              "id": 363,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2474:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2474:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2465:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 366,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2489:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2465:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e742066756e6473206465706f7369746564",
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2497:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        },
                        "value": "insufficient funds deposited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3708508cdcde1a636712f5edf8c07c73f35903e7879f5ae7dce97685b6e38ff3",
                          "typeString": "literal_string \"insufficient funds deposited\""
                        }
                      ],
                      "id": 361,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2457:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2457:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 370,
                  "nodeType": "ExpressionStatement",
                  "src": "2457:71:2"
                },
                {
                  "expression": {
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 371,
                      "name": "pendingWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2579:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2623:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 372,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2600:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1347,
                        "src": "2600:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2600:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2579:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:46:2"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 378,
                        "name": "withdraws",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "2631:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                          "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                        }
                      },
                      "id": 380,
                      "indexExpression": {
                        "id": 379,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2641:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2631:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                        "typeString": "struct Token.Withdraw storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 382,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2672:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2672:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 384,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 358,
                          "src": "2683:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 381,
                        "name": "Withdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "2663:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Withdraw_$298_storage_ptr_$",
                          "typeString": "type(struct Token.Withdraw storage pointer)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2663:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Withdraw_$298_memory_ptr",
                        "typeString": "struct Token.Withdraw memory"
                      }
                    },
                    "src": "2631:59:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                      "typeString": "struct Token.Withdraw storage ref"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:59:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 389,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "2717:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 390,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2737:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2737:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 392,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "2749:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 388,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "2706:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "EmitStatement",
                  "src": "2701:55:2"
                }
              ]
            },
            "documentation": {
              "id": 356,
              "nodeType": "StructuredDocumentation",
              "src": "2072:335:2",
              "text": "@notice this function is to let token holder withdraw his tokens from admin wallet/account.\n @dev token holders can withdraw as much tokens as he wants in more than one transactions.\n @param amount amount of the tokens withdrawer want to withdraw\n **** condition: withdrawer must have deposited enought tokens first."
            },
            "functionSelector": "2e1a7d4d",
            "id": 396,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 396,
                  "src": "2428:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2428:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2427:16:2"
            },
            "returnParameters": {
              "id": 360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2451:0:2"
            },
            "scope": 500,
            "src": "2410:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "3168:500:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 405,
                          "name": "pendingWithdrawals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "3182:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3203:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3182:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f207769746864726177616c7320726571756573746564",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        },
                        "value": "no withdrawals requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1abf60b8ced5e7a26dad11ad8fe13de581c58f92006c89519f5401029957ad",
                          "typeString": "literal_string \"no withdrawals requested\""
                        }
                      ],
                      "id": 404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3174:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3174:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "3174:59:2"
                },
                {
                  "assignments": [
                    412
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 412,
                      "mutability": "mutable",
                      "name": "from",
                      "nodeType": "VariableDeclaration",
                      "scope": 463,
                      "src": "3239:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 411,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3239:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 414,
                  "initialValue": {
                    "id": 413,
                    "name": "pendingWithdrawals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 282,
                    "src": "3254:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3239:33:2"
                },
                {
                  "body": {
                    "id": 455,
                    "nodeType": "Block",
                    "src": "3319:280:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "3339:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 427,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "3346:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 429,
                                "indexExpression": {
                                  "id": 428,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "3356:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3346:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 295,
                              "src": "3346:40:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 431,
                                  "name": "withdraws",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 293,
                                  "src": "3388:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                    "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                                  }
                                },
                                "id": 433,
                                "indexExpression": {
                                  "id": 432,
                                  "name": "pendingWithdrawals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "3398:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3388:29:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                                  "typeString": "struct Token.Withdraw storage ref"
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 297,
                              "src": "3388:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 425,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 850,
                            "src": "3329:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3329:96:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 436,
                        "nodeType": "ExpressionStatement",
                        "src": "3329:96:2"
                      },
                      {
                        "expression": {
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "3435:36:2",
                          "subExpression": {
                            "baseExpression": {
                              "id": 437,
                              "name": "withdraws",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 293,
                              "src": "3442:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Withdraw_$298_storage_$",
                                "typeString": "mapping(uint256 => struct Token.Withdraw storage ref)"
                              }
                            },
                            "id": 439,
                            "indexExpression": {
                              "id": 438,
                              "name": "pendingWithdrawals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "3452:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3442:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Withdraw_$298_storage",
                              "typeString": "struct Token.Withdraw storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 441,
                        "nodeType": "ExpressionStatement",
                        "src": "3435:36:2"
                      },
                      {
                        "expression": {
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 442,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3481:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3525:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "id": 443,
                                "name": "pendingWithdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 282,
                                "src": "3502:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1362,
                              "src": "3502:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3502:25:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3481:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "3481:46:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 449,
                            "name": "pendingWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "3541:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3563:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3541:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "3537:56:2",
                        "trueBody": {
                          "id": 453,
                          "nodeType": "Block",
                          "src": "3565:28:2",
                          "statements": [
                            {
                              "id": 452,
                              "nodeType": "Break",
                              "src": "3577:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 419,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 416,
                      "src": "3299:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 420,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "3303:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3299:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 456,
                  "initializationExpression": {
                    "assignments": [
                      416
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 456,
                        "src": "3284:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3284:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 418,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3296:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3284:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3314:3:2",
                      "subExpression": {
                        "id": 422,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "3314:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 424,
                    "nodeType": "ExpressionStatement",
                    "src": "3314:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3279:320:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 458,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "3627:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 459,
                        "name": "pendingWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "3633:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 460,
                        "name": "batchSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "3653:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 457,
                      "name": "WithdrawalHandled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "3609:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256)"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3609:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "EmitStatement",
                  "src": "3604:59:2"
                }
              ]
            },
            "documentation": {
              "id": 397,
              "nodeType": "StructuredDocumentation",
              "src": "2765:337:2",
              "text": "@notice this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request.\n @dev only admin can trigger this function.\n @param batchSize number of withdraws to process\n **** condition: withdraws must be requested first by users/withdrawers."
            },
            "functionSelector": "01b86d12",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 402,
                "modifierName": {
                  "id": 401,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 477,
                  "src": "3151:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3151:9:2"
              }
            ],
            "name": "handleWithdrawals",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 399,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "3132:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:19:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3168:0:2"
            },
            "scope": 500,
            "src": "3105:563:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "3736:80:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 468,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3750:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3750:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 470,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3764:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3750:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "756e617574686f72697a65643a2063616c6c6572206e6f742061646d696e",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3771:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        },
                        "value": "unauthorized: caller not admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e19267ef066701204f2bf44bb207af60fe0311e77fd06f6849dd17844eaebb66",
                          "typeString": "literal_string \"unauthorized: caller not admin\""
                        }
                      ],
                      "id": 467,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3742:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:62:2"
                },
                {
                  "id": 475,
                  "nodeType": "PlaceholderStatement",
                  "src": "3810:1:2"
                }
              ]
            },
            "documentation": {
              "id": 465,
              "nodeType": "StructuredDocumentation",
              "src": "3669:43:2",
              "text": "@dev modifier to ensure caller is admin"
            },
            "id": 477,
            "name": "onlyAdmin",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:2:2"
            },
            "src": "3715:101:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 483,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 479,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositer",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3846:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 481,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "3873:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:43:2"
            },
            "src": "3832:57:2"
          },
          {
            "anonymous": false,
            "id": 491,
            "name": "Withdrawal",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 485,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3909:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3909:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3929:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "3957:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3908:64:2"
            },
            "src": "3892:81:2"
          },
          {
            "anonymous": false,
            "id": 499,
            "name": "WithdrawalHandled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4000:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 495,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4014:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4014:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 497,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "4026:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3999:45:2"
            },
            "src": "3976:69:2"
          }
        ],
        "scope": 501,
        "src": "504:3543:2"
      }
    ],
    "src": "32:4016:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2022-01-23T13:27:42.781Z",
  "devdoc": {
    "author": "Naveed",
    "details": "Except standard ERC20 token's features, this smartcontract has two additional features through which",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "constructor to initialize Token contract.",
        "params": {
          "name_": "name of ERC20 token",
          "supply_": "total supply of token",
          "symbol_": "symbol of token"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "details": "token holders can deposit as much tokens as he wants in more than one transactions. Total deposit amount gets updated each time.",
        "params": {
          "amount": "amount of the tokens depositer want to deposit."
        }
      },
      "handleWithdrawals(uint256)": {
        "details": "only admin can trigger this function.",
        "params": {
          "batchSize": "number of withdraws to process **** condition: withdraws must be requested first by users/withdrawers."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "withdraw(uint256)": {
        "details": "token holders can withdraw as much tokens as he wants in more than one transactions.",
        "params": {
          "amount": "amount of the tokens withdrawer want to withdraw **** condition: withdrawer must have deposited enought tokens first."
        }
      }
    },
    "stateVariables": {
      "deposits": {
        "details": "depositer address => total amount depositer has deposited"
      },
      "withdraws": {
        "details": "withdrawId => Withdraw struct"
      }
    },
    "title": "Token - ERC20 Token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "admin()": {
        "notice": "account which handle users withdrawal requests"
      },
      "deposit(uint256)": {
        "notice": "this function is to let token holder deposit his tokens to admin wallet/account."
      },
      "deposits(address)": {
        "notice": "mapping to track users deposits"
      },
      "handleWithdrawals(uint256)": {
        "notice": "this function is to let admin handle withdraw requests of withdrawers by sending them back their deposited amount as per their withdraw request."
      },
      "pendingWithdrawals()": {
        "notice": "count to track pending withdrawals"
      },
      "withdraw(uint256)": {
        "notice": "this function is to let token holder withdraw his tokens from admin wallet/account."
      },
      "withdraws(uint256)": {
        "notice": "mapping to track users withdraw requests"
      }
    },
    "notice": "This is an ERC20 token, allowing users to deposit & withdraw tokens.",
    "version": 1
  }
}